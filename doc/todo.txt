////////////////////////////////////////////////////////////////////////////////////////////
2024.06.16//////////////////////////////////////////////////////////////////////////////////
发现name采用如下样式时，在TestExplorer中Looper当作class来分组
TEST_CASE("Looper.addChild")
TEST_CASE("Looper.createHandler") 

https://github.com/JohnnyHendriks/TestAdapter_Catch2/issues/41

todo:
.为了等待子Looper可靠退出
 引入atomic<int> mChildCount;

////////////////////////////////////////////////////////////////////////////////////////////
2024.06.13//////////////////////////////////////////////////////////////////////////////////
todo:
.构造和析构函数中不允许调用setTimer,killTimer
 要在onCreate和onDestroy中调用

////////////////////////////////////////////////////////////////////////////////////////////
2024.06.11//////////////////////////////////////////////////////////////////////////////////
changes:
.去掉了wepoll

////////////////////////////////////////////////////////////////////////////////////////////
2024.06.08//////////////////////////////////////////////////////////////////////////////////
.发现wepoll只严格支持socket,不支持pipe,serialport之类的，所以不能使用wepoll
.相比实现的功能,感觉asio的代码过于复杂,不利于维护，排查bug也不方便

todo:
.LooperImpl::CanQuitLooperNow()应该对子looper和子handler一视同仁，不需要专门等待子looper退出信号
.DateTime仅在mcu裸机下自行实现，在其他环境下用os自带api实现

////////////////////////////////////////////////////////////////////////////////////////////
2024.06.05//////////////////////////////////////////////////////////////////////////////////
决定先只实现windows下的handler,looper,等完善后再移植到linux


////////////////////////////////////////////////////////////////////////////////////////////
2024.05.31//////////////////////////////////////////////////////////////////////////////////
研究asio

发现一个牛人开源的事件库eventpp有点意思
https://github.com/wqking/eventpp

今天用wps看原理图，居然有bug,在搜索时有些字符串不显示，要关闭文档重新打开才能显示
adobo reader也不好用，全屏单页连续要Ctrl+L,再按两次Ctrl+Shift+H,还有很多其他不顺手的地方

发现github上开源sumatrapdf里面有vs2022工程能直接编译成功，查看pdf速度很快
sumatrapdf是从2007年开始用win32写的,佩服



////////////////////////////////////////////////////////////////////////////////////////////
2024.05.30//////////////////////////////////////////////////////////////////////////////////
决定先把windows下的初步弄出来再调linux的
到时统一使用cmake,不创建vs工程,直接在vs中打开cmake工程


todo:
.c++ mutex+condition_variable替换Event
.使用std::thread
////////////////////////////////////////////////////////////////////////////////////////////
2024.05.29//////////////////////////////////////////////////////////////////////////////////
测试vs cpp unittest,gtest,catch2,ctest，搭配vld内存泄漏检测
看哪种组合最方便
windows上memory leak用vld
linux上用valgrind

https://github.com/catchorg/Catch2/blob/v2.x/

vld用这个版本比较好，能直接在vs2022中编译,
原版的反倒不行，原版很多年没有维护了
https://github.com/GermanAizek/VisualLeakDetector-NG


////////////////////////////////////////////////////////////////////////////////////////////
2024.05.27//////////////////////////////////////////////////////////////////////////////////
https://github.com/piscisaureus/wepoll
todo:
.wepoll中说只支持socket,需要测试是否支持串口

